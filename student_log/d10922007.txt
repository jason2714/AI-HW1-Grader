searchTestClasses
searchTestClasses.py
Starting on 3-22 at 10:11:39

Question q1
===========

*** PASS: test_cases/q1/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'D', 'C']
*** PASS: test_cases/q1/graph_bfs_vs_dfs.test
*** 	solution:		['2:A->D', '0:D->G']
*** 	expanded_states:	['A', 'D']
*** PASS: test_cases/q1/graph_infinite.test
*** 	solution:		['0:A->B', '1:B->C', '1:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** PASS: test_cases/q1/graph_manypaths.test
*** 	solution:		['2:A->B2', '0:B2->C', '0:C->D', '2:D->E2', '0:E2->F', '0:F->G']
*** 	expanded_states:	['A', 'B2', 'C', 'D', 'E2', 'F']
*** PASS: test_cases/q1/pacman_1.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 130
*** 	nodes expanded:		146

### Question q1: 20/20 ###


Question q2
===========

*** PASS: test_cases/q2/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C', 'D']
*** PASS: test_cases/q2/graph_bfs_vs_dfs.test
*** 	solution:		['1:A->G']
*** 	expanded_states:	['A', 'B']
*** PASS: test_cases/q2/graph_infinite.test
*** 	solution:		['0:A->B', '1:B->C', '1:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** PASS: test_cases/q2/graph_manypaths.test
*** 	solution:		['1:A->C', '0:C->D', '1:D->F', '0:F->G']
*** 	expanded_states:	['A', 'B1', 'C', 'B2', 'D', 'E1', 'F', 'E2']
*** PASS: test_cases/q2/pacman_1.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 68
*** 	nodes expanded:		269

### Question q2: 20/20 ###


Question q3
===========

*** PASS: test_cases/q3/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C', 'D']
*** PASS: test_cases/q3/graph_bfs_vs_dfs.test
*** 	solution:		['1:A->G']
*** 	expanded_states:	['A', 'B']
*** PASS: test_cases/q3/graph_infinite.test
*** 	solution:		['0:A->B', '1:B->C', '1:C->G']
*** 	expanded_states:	['A', 'B', 'C']
*** PASS: test_cases/q3/graph_manypaths.test
*** 	solution:		['1:A->C', '0:C->D', '1:D->F', '0:F->G']
*** 	expanded_states:	['A', 'B1', 'C', 'B2', 'D', 'E1', 'F', 'E2']
*** PASS: test_cases/q3/ucs_0_graph.test
*** 	solution:		['Right', 'Down', 'Down']
*** 	expanded_states:	['A', 'B', 'D', 'C', 'G']
*** PASS: test_cases/q3/ucs_1_problemC.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 68
*** 	nodes expanded:		269
*** PASS: test_cases/q3/ucs_2_problemE.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 74
*** 	nodes expanded:		260
*** PASS: test_cases/q3/ucs_3_problemW.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 152
*** 	nodes expanded:		173
*** PASS: test_cases/q3/ucs_4_testSearch.test
*** 	pacman layout:		testSearch
*** 	solution length: 7
*** 	nodes expanded:		14
*** PASS: test_cases/q3/ucs_5_goalAtDequeue.test
*** 	solution:		['1:A->B', '0:B->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C']

### Question q3: 30/30 ###


Question q4
===========

('B', 'Right', 2.0) 2.0
('H', 'Right', 4.0) 6.0
('D', 'Down', 1.0) 3.0
('C', 'Up', 2.0) 4.0
('E', 'Right', 2.5) 5.5
('F', 'Down', 2.0) 5.0
('G', 'Left', 1.5) 4.5
('B', 'Down', 2.0) 6.0
*** PASS: test_cases/q4/astar_0.test
*** 	solution:		['Right', 'Down', 'Down']
*** 	expanded_states:	['A', 'B', 'D', 'C', 'G']
('A', '0', 2.0) 4.5
('B', '1', 3.0) 8.25
('D', '2', 5.0) 6.0625
('C', '0', 3.0) 6.125
('B', '0', 4.0) 15.3125
('C', '1', 1.0) 8.1875
('G', '2', 5.0) 10.0
('A', '0', 3.0) 11.625
('D', '1', 1.0) 8.1875
('G', '2', 2.0) 8.125
*** PASS: test_cases/q4/astar_1_graph_heuristic.test
*** 	solution:		['0', '0', '2']
*** 	expanded_states:	['S', 'A', 'D', 'C']
((34, 15), 'South', 1) 48
((33, 16), 'West', 1) 48
((34, 14), 'South', 1) 48
((32, 16), 'West', 1) 48
((34, 15), 'North', 1) 96
((33, 14), 'West', 1) 48
((33, 16), 'East', 1) 96
((31, 16), 'West', 1) 48
((34, 14), 'East', 1) 95
((32, 14), 'West', 1) 48
((32, 16), 'East', 1) 95
((30, 16), 'West', 1) 48
((33, 14), 'East', 1) 94
((31, 14), 'West', 1) 48
((31, 16), 'East', 1) 94
((29, 16), 'West', 1) 48
((32, 14), 'East', 1) 93
((30, 14), 'West', 1) 48
((30, 16), 'East', 1) 93
((28, 16), 'West', 1) 48
((30, 13), 'South', 1) 48
((31, 14), 'East', 1) 92
((29, 16), 'East', 1) 92
((27, 16), 'West', 1) 48
((30, 14), 'North', 1) 91
((30, 12), 'South', 1) 48
((28, 16), 'East', 1) 91
((26, 16), 'West', 1) 48
((30, 13), 'North', 1) 90
((31, 12), 'East', 1) 50
((27, 16), 'East', 1) 90
((25, 16), 'West', 1) 48
((25, 15), 'South', 1) 48
((26, 16), 'East', 1) 89
((24, 16), 'West', 1) 48
((25, 16), 'North', 1) 88
((25, 14), 'South', 1) 48
((25, 16), 'East', 1) 88
((23, 16), 'West', 1) 48
((25, 15), 'North', 1) 87
((26, 14), 'East', 1) 50
((24, 16), 'East', 1) 87
((22, 16), 'West', 1) 48
((23, 16), 'East', 1) 86
((21, 16), 'West', 1) 48
((22, 16), 'East', 1) 85
((20, 16), 'West', 1) 48
((21, 16), 'East', 1) 84
((19, 16), 'West', 1) 48
((20, 16), 'East', 1) 83
((18, 16), 'West', 1) 48
((19, 16), 'East', 1) 82
((17, 16), 'West', 1) 48
((18, 16), 'East', 1) 81
((16, 16), 'West', 1) 48
((17, 16), 'East', 1) 80
((15, 16), 'West', 1) 48
((16, 16), 'East', 1) 79
((14, 16), 'West', 1) 48
((15, 16), 'East', 1) 78
((13, 16), 'West', 1) 48
((14, 16), 'East', 1) 77
((12, 16), 'West', 1) 48
((13, 16), 'East', 1) 76
((11, 16), 'West', 1) 48
((12, 16), 'East', 1) 75
((10, 16), 'West', 1) 48
((11, 16), 'East', 1) 74
((9, 16), 'West', 1) 48
((10, 16), 'East', 1) 73
((8, 16), 'West', 1) 48
((9, 16), 'East', 1) 72
((7, 16), 'West', 1) 48
((8, 16), 'East', 1) 71
((6, 16), 'West', 1) 48
((7, 16), 'East', 1) 70
((5, 16), 'West', 1) 48
((6, 16), 'East', 1) 69
((4, 16), 'West', 1) 48
((5, 16), 'East', 1) 68
((3, 16), 'West', 1) 48
((4, 16), 'East', 1) 67
((2, 16), 'West', 1) 48
((3, 16), 'East', 1) 66
((1, 16), 'West', 1) 48
((1, 15), 'South', 1) 48
((2, 16), 'East', 1) 65
((1, 16), 'North', 1) 64
((1, 14), 'South', 1) 48
((1, 15), 'North', 1) 63
((1, 13), 'South', 1) 48
((1, 14), 'North', 1) 62
((1, 12), 'South', 1) 48
((1, 13), 'North', 1) 61
((1, 11), 'South', 1) 48
((1, 12), 'North', 1) 60
((1, 10), 'South', 1) 48
((1, 11), 'North', 1) 59
((1, 9), 'South', 1) 48
((1, 10), 'North', 1) 58
((1, 8), 'South', 1) 48
((1, 9), 'North', 1) 57
((1, 7), 'South', 1) 48
((1, 8), 'North', 1) 56
((2, 7), 'East', 1) 50
((32, 12), 'East', 1) 52
((30, 12), 'West', 1) 91
((27, 14), 'East', 1) 52
((25, 14), 'West', 1) 88
((3, 7), 'East', 1) 52
((1, 7), 'West', 1) 57
((33, 12), 'East', 1) 54
((31, 12), 'West', 1) 94
((27, 13), 'South', 1) 52
((26, 14), 'West', 1) 91
((4, 7), 'East', 1) 54
((2, 7), 'West', 1) 60
((27, 14), 'North', 1) 92
((27, 12), 'South', 1) 52
((27, 13), 'North', 1) 91
((27, 11), 'South', 1) 52
((27, 12), 'North', 1) 90
((26, 11), 'West', 1) 52
((27, 11), 'East', 1) 89
((25, 11), 'West', 1) 52
((26, 11), 'East', 1) 88
((24, 11), 'West', 1) 52
((24, 12), 'North', 1) 54
((25, 11), 'East', 1) 87
((34, 12), 'East', 1) 56
((32, 12), 'West', 1) 97
((4, 8), 'North', 1) 56
((3, 7), 'West', 1) 63
((24, 11), 'South', 1) 88
((23, 12), 'West', 1) 54
((24, 12), 'East', 1) 89
((22, 12), 'West', 1) 54
((23, 12), 'East', 1) 88
((21, 12), 'West', 1) 54
((22, 12), 'East', 1) 87
((20, 12), 'West', 1) 54
((20, 11), 'South', 1) 54
((21, 12), 'East', 1) 86
((19, 12), 'West', 1) 54
((20, 12), 'North', 1) 85
((20, 10), 'South', 1) 54
((19, 11), 'West', 1) 54
((19, 11), 'South', 1) 83
((20, 12), 'East', 1) 85
((18, 12), 'West', 1) 54
((20, 11), 'North', 1) 84
((20, 9), 'South', 1) 54
((19, 12), 'North', 1) 84
((20, 11), 'East', 1) 84
((19, 12), 'East', 1) 84
((17, 12), 'West', 1) 54
((20, 10), 'North', 1) 83
((21, 9), 'East', 1) 56
((17, 13), 'North', 1) 56
((18, 12), 'East', 1) 83
((16, 12), 'West', 1) 54
((17, 12), 'East', 1) 82
((15, 12), 'West', 1) 54
((16, 12), 'East', 1) 81
((14, 12), 'West', 1) 54
((14, 11), 'South', 1) 54
((15, 12), 'East', 1) 80
((13, 12), 'West', 1) 54
((14, 12), 'North', 1) 79
((14, 10), 'South', 1) 54
((14, 12), 'East', 1) 79
((12, 12), 'West', 1) 54
((14, 11), 'North', 1) 78
((15, 10), 'East', 1) 56
((12, 13), 'North', 1) 56
((12, 11), 'South', 1) 54
((13, 12), 'East', 1) 78
((12, 12), 'North', 1) 77
((12, 10), 'South', 1) 54
((12, 11), 'North', 1) 76
((11, 10), 'West', 1) 54
((12, 10), 'East', 1) 75
((10, 10), 'West', 1) 54
((10, 11), 'North', 1) 56
((11, 10), 'East', 1) 74
((34, 11), 'South', 1) 56
((33, 12), 'West', 1) 100
((4, 9), 'North', 1) 58
((4, 7), 'South', 1) 66
((22, 9), 'East', 1) 58
((20, 9), 'West', 1) 84
((17, 14), 'North', 1) 58
((17, 12), 'South', 1) 84
((16, 10), 'East', 1) 58
((14, 10), 'West', 1) 79
((12, 14), 'North', 1) 58
((12, 12), 'South', 1) 79
((10, 12), 'North', 1) 58
((10, 10), 'South', 1) 75
((34, 12), 'North', 1) 101
((34, 10), 'South', 1) 56
((34, 11), 'North', 1) 100
((33, 10), 'West', 1) 56
((34, 10), 'East', 1) 99
((32, 10), 'West', 1) 56
((33, 10), 'East', 1) 98
((31, 10), 'West', 1) 56
((32, 10), 'East', 1) 97
((30, 10), 'West', 1) 56
((30, 9), 'South', 1) 56
((31, 10), 'East', 1) 96
((29, 10), 'West', 1) 56
((30, 10), 'North', 1) 95
((30, 8), 'South', 1) 56
((30, 10), 'East', 1) 95
((30, 9), 'North', 1) 94
((31, 8), 'East', 1) 58
((4, 10), 'North', 1) 60
((4, 8), 'South', 1) 69
((23, 9), 'East', 1) 60
((21, 9), 'West', 1) 87
((17, 13), 'South', 1) 87
((16, 14), 'West', 1) 58
((17, 10), 'East', 1) 60
((15, 10), 'West', 1) 82
((12, 13), 'South', 1) 82
((13, 14), 'East', 1) 60
((10, 13), 'North', 1) 60
((10, 11), 'South', 1) 78
((32, 8), 'East', 1) 60
((30, 8), 'West', 1) 95
((17, 14), 'East', 1) 88
((15, 14), 'West', 1) 58
((16, 14), 'East', 1) 87
((14, 14), 'West', 1) 58
((15, 14), 'East', 1) 86
((13, 14), 'West', 1) 84
((14, 14), 'East', 1) 85
((12, 14), 'West', 1) 83
((4, 11), 'North', 1) 62
((4, 9), 'South', 1) 72
((3, 10), 'West', 1) 60
((24, 9), 'East', 1) 62
((22, 9), 'West', 1) 90
((17, 9), 'South', 1) 60
((16, 10), 'West', 1) 85
((14, 14), 'East', 1) 85
((12, 14), 'West', 1) 83
((10, 14), 'North', 1) 62
((10, 12), 'South', 1) 81
((33, 8), 'East', 1) 62
((31, 8), 'West', 1) 98
((4, 10), 'East', 1) 73
((17, 10), 'North', 1) 86
((17, 8), 'South', 1) 60
((17, 9), 'North', 1) 85
((16, 8), 'West', 1) 60
((17, 8), 'East', 1) 84
((15, 8), 'West', 1) 60
((16, 8), 'East', 1) 83
((14, 8), 'West', 1) 60
((15, 8), 'East', 1) 82
((13, 8), 'West', 1) 60
((14, 8), 'East', 1) 81
((12, 8), 'West', 1) 60
((13, 8), 'East', 1) 80
((11, 8), 'West', 1) 60
((11, 7), 'South', 1) 60
((12, 8), 'East', 1) 79
((11, 8), 'North', 1) 78
((11, 6), 'South', 1) 60
((11, 7), 'North', 1) 77
((10, 6), 'West', 1) 60
((11, 6), 'East', 1) 76
((9, 6), 'West', 1) 60
((10, 6), 'East', 1) 75
((8, 6), 'West', 1) 60
((9, 6), 'East', 1) 74
((7, 6), 'West', 1) 60
((8, 6), 'East', 1) 73
((6, 6), 'West', 1) 60
((6, 5), 'South', 1) 60
((7, 6), 'East', 1) 72
((6, 6), 'North', 1) 71
((5, 5), 'West', 1) 60
((6, 5), 'East', 1) 70
((4, 5), 'West', 1) 60
((5, 5), 'East', 1) 69
((3, 5), 'West', 1) 60
((4, 5), 'East', 1) 68
((2, 5), 'West', 1) 60
((3, 5), 'East', 1) 67
((1, 5), 'West', 1) 60
((1, 4), 'South', 1) 60
((2, 5), 'East', 1) 66
((1, 5), 'North', 1) 65
((1, 3), 'South', 1) 60
((1, 4), 'North', 1) 64
((2, 3), 'East', 1) 62
((4, 12), 'North', 1) 64
((4, 10), 'South', 1) 75
((25, 9), 'East', 1) 64
((23, 9), 'West', 1) 93
((10, 13), 'South', 1) 84
((9, 14), 'West', 1) 62
((34, 8), 'East', 1) 64
((32, 8), 'West', 1) 101
((3, 3), 'East', 1) 64
((1, 3), 'West', 1) 65
((10, 14), 'East', 1) 85
((8, 14), 'West', 1) 62
((8, 13), 'South', 1) 62
((9, 14), 'East', 1) 84
((8, 14), 'North', 1) 83
((8, 12), 'South', 1) 62
((8, 13), 'North', 1) 82
((8, 11), 'South', 1) 62
((8, 12), 'North', 1) 81
((8, 10), 'South', 1) 62
((8, 11), 'North', 1) 80
((8, 9), 'South', 1) 62
((8, 10), 'North', 1) 79
((8, 8), 'South', 1) 62
((8, 9), 'North', 1) 78
((7, 8), 'West', 1) 62
((8, 8), 'East', 1) 77
((6, 8), 'West', 1) 62
((6, 9), 'North', 1) 64
((7, 8), 'East', 1) 76
((4, 13), 'North', 1) 66
((4, 11), 'South', 1) 78
((26, 9), 'East', 1) 66
((24, 9), 'West', 1) 96
((34, 7), 'South', 1) 64
((33, 8), 'West', 1) 104
((4, 3), 'East', 1) 66
((2, 3), 'West', 1) 68
((6, 10), 'North', 1) 66
((6, 8), 'South', 1) 77
((34, 8), 'North', 1) 105
((34, 6), 'South', 1) 64
((34, 7), 'North', 1) 104
((33, 6), 'West', 1) 64
((34, 6), 'East', 1) 103
((32, 6), 'West', 1) 64
((33, 6), 'East', 1) 102
((31, 6), 'West', 1) 64
((32, 6), 'East', 1) 101
((30, 6), 'West', 1) 64
((30, 5), 'South', 1) 64
((31, 6), 'East', 1) 100
((29, 6), 'West', 1) 64
((30, 6), 'North', 1) 99
((30, 4), 'South', 1) 64
((30, 6), 'East', 1) 99
((30, 5), 'North', 1) 98
((30, 3), 'South', 1) 64
((31, 4), 'East', 1) 66
((30, 4), 'North', 1) 97
((31, 3), 'East', 1) 66
((4, 14), 'North', 1) 68
((4, 12), 'South', 1) 81
((27, 9), 'East', 1) 68
((25, 9), 'West', 1) 99
((5, 3), 'East', 1) 68
((3, 3), 'West', 1) 71
((6, 11), 'North', 1) 68
((6, 9), 'South', 1) 80
((31, 3), 'South', 1) 99
((32, 4), 'East', 1) 68
((30, 4), 'West', 1) 99
((31, 4), 'North', 1) 100
((30, 3), 'West', 1) 98
((4, 13), 'South', 1) 84
((5, 14), 'East', 1) 70
((27, 8), 'South', 1) 68
((26, 9), 'West', 1) 102
((6, 3), 'East', 1) 70
((4, 3), 'West', 1) 74
((6, 12), 'North', 1) 70
((6, 10), 'South', 1) 83
((33, 4), 'East', 1) 70
((31, 4), 'West', 1) 102
((27, 9), 'North', 1) 103
((27, 7), 'South', 1) 68
((27, 8), 'North', 1) 102
((27, 6), 'South', 1) 68
((27, 7), 'North', 1) 101
((27, 5), 'South', 1) 68
((27, 6), 'North', 1) 100
((27, 4), 'South', 1) 68
((27, 5), 'North', 1) 99
((27, 3), 'South', 1) 68
((27, 4), 'North', 1) 98
((27, 2), 'South', 1) 68
((27, 3), 'North', 1) 97
((27, 1), 'South', 1) 68
((26, 2), 'West', 1) 68
((27, 2), 'North', 1) 96
((28, 1), 'East', 1) 70
((27, 2), 'East', 1) 96
((25, 2), 'West', 1) 68
((26, 2), 'East', 1) 95
((24, 2), 'West', 1) 68
((25, 2), 'East', 1) 94
((23, 2), 'West', 1) 68
((24, 2), 'East', 1) 93
((22, 2), 'West', 1) 68
((23, 2), 'East', 1) 92
((21, 2), 'West', 1) 68
((22, 2), 'East', 1) 91
((20, 2), 'West', 1) 68
((21, 2), 'East', 1) 90
((19, 2), 'West', 1) 68
((20, 2), 'East', 1) 89
((18, 2), 'West', 1) 68
((19, 2), 'East', 1) 88
((17, 2), 'West', 1) 68
((18, 2), 'East', 1) 87
((16, 2), 'West', 1) 68
((17, 2), 'East', 1) 86
((15, 2), 'West', 1) 68
((15, 3), 'North', 1) 70
((16, 2), 'East', 1) 85
((14, 2), 'West', 1) 68
((15, 2), 'East', 1) 84
((13, 2), 'West', 1) 68
((14, 2), 'East', 1) 83
((12, 2), 'West', 1) 68
((13, 2), 'East', 1) 82
((11, 2), 'West', 1) 68
((12, 2), 'East', 1) 81
((10, 2), 'West', 1) 68
((10, 1), 'South', 1) 68
((11, 2), 'East', 1) 80
((10, 2), 'North', 1) 79
((9, 1), 'West', 1) 68
((10, 1), 'East', 1) 78
((8, 1), 'West', 1) 68
((9, 1), 'East', 1) 77
((7, 1), 'West', 1) 68
((8, 1), 'East', 1) 76
((6, 1), 'West', 1) 68
((7, 1), 'East', 1) 75
((5, 1), 'West', 1) 68
((6, 1), 'East', 1) 74
((4, 1), 'West', 1) 68
((5, 1), 'East', 1) 73
((3, 1), 'West', 1) 68
((4, 1), 'East', 1) 72
((2, 1), 'West', 1) 68
((3, 1), 'East', 1) 71
((1, 1), 'West', 1) 68
*** PASS: test_cases/q4/astar_2_manhattan.test
*** 	pacman layout:		mediumMaze
*** 	solution length: 68
*** 	nodes expanded:		222
('G', '0:A->G', 10.0) 10.0
('B', '1:A->B', 1.0) 1.0
('C', '0:B->C', 1.0) 2.0
('G', '0:C->G', 1.0) 3.0
*** PASS: test_cases/q4/astar_3_goalAtDequeue.test
*** 	solution:		['1:A->B', '0:B->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C']
('B', '0:A->B', 1.0) 1.0
('C', '1:A->C', 2.0) 2.0
('D', '2:A->D', 4.0) 4.0
('G', '0:C->G', 8.0) 10.0
*** PASS: test_cases/q4/graph_backtrack.test
*** 	solution:		['1:A->C', '0:C->G']
*** 	expanded_states:	['A', 'B', 'C', 'D']
('B1', '0:A->B1', 1.0) 1.0
('C', '1:A->C', 2.0) 2.0
('B2', '2:A->B2', 4.0) 4.0
('C', '0:B1->C', 8.0) 9.0
('D', '0:C->D', 32.0) 34.0
('C', '0:B2->C', 16.0) 20.0
('E1', '0:D->E1', 64.0) 98.0
('F', '1:D->F', 128.0) 162.0
('E2', '2:D->E2', 256.0) 290.0
('F', '0:E1->F', 512.0) 610.0
('G', '0:F->G', 2048.0) 2210.0
('F', '0:E2->F', 1024.0) 1314.0
*** PASS: test_cases/q4/graph_manypaths.test
*** 	solution:		['1:A->C', '0:C->D', '1:D->F', '0:F->G']
*** 	expanded_states:	['A', 'B1', 'C', 'B2', 'D', 'E1', 'F', 'E2']

### Question q4: 30/30 ###


Finished at 10:11:39

Provisional grades
==================
Question q1: 20/20
Question q2: 20/20
Question q3: 30/30
Question q4: 30/30
------------------
Total: 100/100


                     ALL HAIL GRANDPAC.
              LONG LIVE THE GHOSTBUSTING KING.

                  ---      ----      ---
                  |  \    /  + \    /  |
                  | + \--/      \--/ + |
                  |   +     +          |
                  | +     +        +   |
                @@@@@@@@@@@@@@@@@@@@@@@@@@
              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
            \   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
             \ /  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
              V   \   @@@@@@@@@@@@@@@@@@@@@@@@@@@@
                   \ /  @@@@@@@@@@@@@@@@@@@@@@@@@@
                    V     @@@@@@@@@@@@@@@@@@@@@@@@
                            @@@@@@@@@@@@@@@@@@@@@@
                    /\      @@@@@@@@@@@@@@@@@@@@@@
                   /  \  @@@@@@@@@@@@@@@@@@@@@@@@@
              /\  /    @@@@@@@@@@@@@@@@@@@@@@@@@@@
             /  \ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
            /    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                @@@@@@@@@@@@@@@@@@@@@@@@@@
                    @@@@@@@@@@@@@@@@@@


